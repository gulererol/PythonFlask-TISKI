{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mehmet ali \\xF6den\\\\Desktop\\\\tiskiiii\\\\frontend\\\\src\\\\components\\\\RegisterPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterPage = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const history = useHistory();\n  const handleRegister = () => {\n    // Kullanıcı kaydı oluşturma işlemlerini burada yapabilirsiniz.\n    // Örneğin, kullanıcı adı ve şifreyi veritabanına kaydedebilirsiniz.\n    // Bu örnekte, sadece bir örnek işlem yaptığımızı unutmayın.\n\n    if (username && password) {\n      // Kullanıcı adı ve şifre girişi yapılmalıdır.\n      // Gerçek projede bu bilgileri veritabanına kaydedebilirsiniz.\n      alert('Kayıt başarılı. Giriş yapabilirsiniz.');\n      history.push('/login'); // Kayıt tamamlandıktan sonra giriş sayfasına yönlendir.\n    } else {\n      // Kullanıcı adı ve şifre boşsa hata mesajı göster.\n      alert('Kullanıcı adı ve şifre alanları zorunludur.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Kullan\\u0131c\\u0131 Ad\\u0131\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"\\u015Eifre\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRegister,\n      children: \"Kay\\u0131t Ol\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterPage, \"tv8EzuaX//5WlTHeteRkd5b7x4w=\", false, function () {\n  return [useHistory];\n});\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","useHistory","jsxDEV","_jsxDEV","RegisterPage","_s","username","setUsername","password","setPassword","history","handleRegister","alert","push","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mehmet ali öden/Desktop/tiskiiii/frontend/src/components/RegisterPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst RegisterPage = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const history = useHistory();\r\n\r\n  const handleRegister = () => {\r\n    // Kullanıcı kaydı oluşturma işlemlerini burada yapabilirsiniz.\r\n    // Örneğin, kullanıcı adı ve şifreyi veritabanına kaydedebilirsiniz.\r\n    // Bu örnekte, sadece bir örnek işlem yaptığımızı unutmayın.\r\n\r\n    if (username && password) {\r\n      // Kullanıcı adı ve şifre girişi yapılmalıdır.\r\n      // Gerçek projede bu bilgileri veritabanına kaydedebilirsiniz.\r\n      alert('Kayıt başarılı. Giriş yapabilirsiniz.');\r\n      history.push('/login'); // Kayıt tamamlandıktan sonra giriş sayfasına yönlendir.\r\n    } else {\r\n      // Kullanıcı adı ve şifre boşsa hata mesajı göster.\r\n      alert('Kullanıcı adı ve şifre alanları zorunludur.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Register Page</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Kullanıcı Adı\"\r\n        value={username}\r\n        onChange={(e) => setUsername(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Şifre\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n      <button onClick={handleRegister}>Kayıt Ol</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMU,OAAO,GAAGT,UAAU,CAAC,CAAC;EAE5B,MAAMU,cAAc,GAAGA,CAAA,KAAM;IAC3B;IACA;IACA;;IAEA,IAAIL,QAAQ,IAAIE,QAAQ,EAAE;MACxB;MACA;MACAI,KAAK,CAAC,uCAAuC,CAAC;MAC9CF,OAAO,CAACG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC1B,CAAC,MAAM;MACL;MACAD,KAAK,CAAC,6CAA6C,CAAC;IACtD;EACF,CAAC;EAED,oBACET,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBf,OAAA;MACEgB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,8BAAe;MAC3BC,KAAK,EAAEf,QAAS;MAChBgB,QAAQ,EAAGC,CAAC,IAAKhB,WAAW,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACFf,OAAA;MACEgB,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,YAAO;MACnBC,KAAK,EAAEb,QAAS;MAChBc,QAAQ,EAAGC,CAAC,IAAKd,WAAW,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACFf,OAAA;MAAQsB,OAAO,EAAEd,cAAe;MAAAG,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEV,CAAC;AAACb,EAAA,CAvCID,YAAY;EAAA,QAGAH,UAAU;AAAA;AAAAyB,EAAA,GAHtBtB,YAAY;AAyClB,eAAeA,YAAY;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}